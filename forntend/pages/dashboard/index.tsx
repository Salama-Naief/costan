import Head from "next/head";
import Image from "next/image";
import React, { useContext, useState } from "react";
import DashboardLeftSide from "../../components/dashboard/DashboardLeftSide";
import Jim from "../../components/dashboard/rightSide/Jim";
import Messages from "../../components/dashboard/rightSide/Messages";
import Notification from "../../components/dashboard/rightSide/Notification";
import WhatsNew from "../../components/dashboard/rightSide/WhatsNew";
import DashboardNav from "../../components/navbar/DashboardNav";
import { Store } from "../../utils/Store";
import wavingHand from "../../public/img/faces/waving-hand.png";
import CreateButton from "../../components/utils/CreateButton";
import CreateContent from "../../components/dashboard/CreateContent";
import {
  ClockHour4,
  DotsVertical,
  SquarePlus,
  TruckReturn,
} from "tabler-icons-react";
import Content from "../../components/dashboard/Content";
import TextEditor from "../../components/dashboard/TextEditor.jsx";
import { backend_api } from "../../utils/Url";
import { GetServerSideProps } from "next";
import { getSession } from "next-auth/react";

interface Cart {
  title?: string;
  amount?: string;
  img?: string;
}
const Card = ({ title, amount, img }: Cart) => {
  return (
    <div className="rounded w-1/4 shadow-xl  h-28">
      {title && img ? (
        <div className="bg-textColor-white p-4">
          <div className="font-semibold text-textColor-100 mb-2">{title}</div>
          <div className="flex items-center justify-between">
            <div className="font-bold text-xl">
              {title === "Total Earning" && "$"}
              {amount}
            </div>
            <div className="w-12 h-12 relative overflow-hidden rounded-full">
              <Image
                src={img}
                fill
                objectFit="contain"
                objectPosition="center"
                alt={title}
              />
            </div>
          </div>
        </div>
      ) : (
        <div className="w-full h-full flex items-center justify-center p-4 border border-gray-100 text-gray-100">
          <SquarePlus />
        </div>
      )}
    </div>
  );
};

/*interface Contnet {
  contentType: {
    name: string;
    img: string;
  };
  createdIn: String;
  description: string;
  title: string;
  plateform: string;
  status: string;
  publishDate: string;
  id: string;
}*/

function Index({ contents }: { contents: Contnet[] }) {
  const { state } = useContext(Store);
  const { content } = state;
  const { options, createContent } = state;

  console.log("content", contents);
  return (
    <div className=" h-screen flex flex-col  overflow-hidden">
      <Head>
        <title>dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DashboardNav />
      <main className="flex flex-1 h-full">
        <div>
          <DashboardLeftSide />
        </div>

        {/**main bar */}
        <div className="flex-1 bg-blue-50 mb-20 h-full relative ">
          <div className="p-8 pb-20 h-full overflow-y-auto">
            <div className="flex space-x-3">
              <div className="text-xl font-bold">
                Good Morning, Flying Beast
              </div>
              <Image src={wavingHand} alt="" width={32} height={32} />
            </div>
            <p className="text-textColor-100 font-semibold">
              Have a nice day today
            </p>
            {createContent && <CreateContent />}
            <div className="my-4 relative h-full">
              {contents?.length > 0 ? (
                <div>
                  <div className="flex space-x-4">
                    <Card
                      amount="10"
                      title="Total Projects"
                      img="/img/projectNum.png"
                    />
                    <Card
                      amount="100.5"
                      title="Total Earning"
                      img="/img/totalErining.png"
                    />
                    <Card />
                  </div>
                  <div className="py-8">
                    <div className="text-xl font-bold">Upcoming week plan</div>
                    <p className="text-textColor-100 text-xs font-semibold">
                      Have a nice day you can start prepare content and track
                      from here
                    </p>
                  </div>
                  {contents.map((cont: Contnet) => (
                    <Content content={cont} />
                  ))}
                </div>
              ) : (
                <div className="h-full flex justify-center items-center bg-textColor-white">
                  <div className="w-2/3 text-center">
                    <p className="font-bold text-xl">
                      You have not planned any content yet. Create content now
                    </p>
                    <p className="text-textColor-100 my-2">
                      Content creators like youtubers, podcast, blogger, Movie
                      or short film and social media using multiple tool to
                      manage content across platforms.
                    </p>
                    <div className="flex justify-center my-6">
                      <CreateButton />
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>

        {/**right side bar */}
        <div className="border-l border-gray-100 w-1/4 p-6 h-full overflow-y-auto ">
          {options === "messages" ? <Messages /> : null}
          {options === "jim" ? <Jim /> : null}
          {options === "whatsNew" ? <WhatsNew /> : null}
          {options === "Notification" ? <Notification /> : null}
        </div>
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  try {
    const session: any = await getSession({ req });
    /* if(!session){
      return{
        redirect:"/"
      }
    }*/
    const contentRes = await fetch(
      `${backend_api}/api/content-users?filters[adminUser][id][$eq]=${session?.id}&&populate=*`,
      {
        headers: {
          "Content-type": "application/json",
          Authorization: `Bearer ${session?.jwt}`,
        },
      }
    );
    const contents = await contentRes.json();
    console.log("contents===>", contents.data[0].attributes.contents.data);
    return {
      props: {
        contents: contents.data[0].attributes.contents.data,
        errMsg: false,
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      props: {
        errMsg: true,
      },
    };
  }
};
export default Index;
